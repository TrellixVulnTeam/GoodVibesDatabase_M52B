{
  "version": 3,
  "sources": ["../../vue-twitch-player/dist/webpack:/webpack/universalModuleDefinition", "../../vue-twitch-player/dist/webpack:/TwitchPlayer.js", "../../vue-twitch-player/dist/webpack:/webpack/bootstrap 4acd410b1a240828e8f9", "../../vue-twitch-player/dist/webpack:/TwitchPlayer.vue", "../../vue-twitch-player/dist/webpack:/~/vue-plugin-load-script/index.js", "../../vue-twitch-player/dist/webpack:/TwitchPlayer.vue", "../../vue-twitch-player/dist/webpack:/usr/lib/~/vue-cli/~/vue-loader/lib/component-normalizer.js", "../../vue-twitch-player/dist/webpack:/TwitchPlayer.vue?e8b3", "../../vue-twitch-player/dist/webpack:/usr/lib/~/vue-cli/~/vue/dist/vue.runtime.common.js", "../../vue-twitch-player/dist/webpack:/(webpack)/buildin/global.js", "dep:vue-twitch-player"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TwitchPlayer\"] = factory();\n\telse\n\t\troot[\"TwitchPlayer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TwitchPlayer\"] = factory();\n\telse\n\t\troot[\"TwitchPlayer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(4),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nconst LoadScript = {\n  install: function (Vue) {\n    Vue.loadScript = function (src) { // eslint-disable-line no-param-reassign\n      return new Promise(function (resolve, reject) {\n        if (document.querySelector('script[src=\"' + src + '\"]')) {\n          resolve();\n\n          return;\n        }\n\n        const el = document.createElement('script');\n\n        el.type = 'text/javascript';\n        el.async = true;\n        el.src = src;\n\n        el.addEventListener('load', resolve);\n        el.addEventListener('error', reject);\n        el.addEventListener('abort', reject);\n\n        document.head.appendChild(el);\n      })\n    };\n  },\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = LoadScript;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_plugin_load_script__ = __webpack_require__(1);\n//\n//\n//\n//\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vue_plugin_load_script__[\"a\" /* default */]);\n\nvar player = void 0;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'twitch-player',\n  props: {\n    width: {\n      type: String,\n      default: '400'\n    },\n    height: {\n      type: String,\n      default: '300'\n    },\n    volume: {\n      type: Number,\n      default: 0.5\n    },\n    quality: {\n      type: String,\n      default: 'medium'\n    },\n    playsInline: { // If true, the embedded player plays inline for mobile iOS apps.\n      type: Boolean,\n      default: false\n    },\n    channel: String,\n    collection: String,\n    video: String\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_0_vue___default.a.loadScript('//player.twitch.tv/js/embed/v1.js').then(function () {\n      var options = {\n        width: _this.width,\n        height: _this.height\n      };\n\n      if (_this.playsInline) {\n        options.playsinline = true;\n      }\n\n      if (_this.channel) {\n        options.channel = _this.channel;\n      } else if (_this.collection) {\n        options.collection = _this.collection;\n      } else if (_this.video) {\n        options.video = _this.video;\n      } else {\n        _this.$emit('error', 'no source specified');\n      }\n\n      player = new window.Twitch.Player(_this.$refs.player, options);\n\n      player.addEventListener('ended', function () {\n        return _this.$emit('ended');\n      });\n\n      player.addEventListener('pause', function () {\n        return _this.$emit('pause');\n      });\n\n      player.addEventListener('play', function () {\n        return _this.$emit('play');\n      });\n\n      player.addEventListener('offline', function () {\n        return _this.$emit('offline');\n      });\n\n      player.addEventListener('online', function () {\n        return _this.$emit('online');\n      });\n\n      player.addEventListener('ready', function () {\n        player.setQuality(_this.quality);\n        player.setVolume(_this.volume);\n\n        _this.$emit('ready');\n      });\n    }).catch(function (e) {\n      return _this.$emit('error', e);\n    });\n  },\n\n  methods: {\n    play: function play() {\n      // Begins playing the specified video.\n      player.play();\n    },\n    pause: function pause() {\n      // Pauses the player.\n      player.pause();\n    },\n    seek: function seek(timestamp) {\n      // Seeks to the specified timestamp (in seconds) in the video and resumes playing if paused. Does not work for live streams.\n      player.seek(timestamp);\n    },\n    getCurrentTime: function getCurrentTime() {\n      // Returns the current video\u2019s timestamp, in seconds. Works only for VODs, not live streams.\n      return player.getCurrentTime();\n    },\n    getDuration: function getDuration() {\n      // Returns the duration of the video, in seconds. Works only for VODs,not live streams.\n      return player.getDuration();\n    },\n    getPlaybackStats: function getPlaybackStats() {\n      // Returns an object with statistics the embedded video player and the current live stream or VOD.\n      return player.getPlaybackStats();\n    },\n    getQuality: function getQuality() {\n      // Returns the current quality of video playback.\n      return player.getQuality();\n    },\n    isPaused: function isPaused() {\n      // Returns true if the video is paused; otherwise, false. Buffering or seeking is considered playing.\n      return player.isPaused();\n    },\n    hasEnded: function hasEnded() {\n      // Returns true if the live stream or VOD has ended; otherwise, false.\n      return player.getEnded();\n    },\n    getVolume: function getVolume() {\n      // Returns the volume level, a value between 0.0 and 1.0.\n      return player.getVolume();\n    },\n    isMuted: function isMuted() {\n      // Returns true if the player is muted; otherwise, false.\n      return player.getMuted();\n    },\n    mute: function mute() {\n      // Mutes the player.\n      player.setMuted(true);\n    },\n    unmute: function unmute() {\n      // Unmutes the player.\n      player.setMuted(false);\n    },\n    checkChannel: function checkChannel() {\n      return this.channel === player.getChannel();\n    },\n    checkVideo: function checkVideo() {\n      return this.video = player.getVideo();\n    }\n  },\n  watch: {\n    channel: function channel(newChannel) {\n      player.setChannel(newChannel);\n    },\n    collection: function collection(newCollection) {\n      player.setCollection(newCollection);\n    },\n    video: function video(newVideo) {\n      player.setVideo(newVideo);\n    },\n    volume: function volume(newVolume) {\n      player.setVolume(newVolume);\n    },\n    quality: function quality(newQuality) {\n      if (player.getQualities().indexOf(newQuality) !== -1) {\n        player.setQuality(newQuality);\n      }\n    }\n  }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"player\"\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.1.10\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    \"production\" !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tidentity: identity,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n    var child = vnode.componentInstance = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.componentInstance = oldVnode.componentInstance;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.componentInstance._isMounted) {\n    vnode.componentInstance._isMounted = true;\n    callHook(vnode.componentInstance, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.componentInstance._inactive = false;\n    callHook(vnode.componentInstance, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.componentInstance._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.componentInstance.$destroy();\n    } else {\n      vnode.componentInstance._inactive = true;\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once,\n    capture: capture\n  }\n});\n\nfunction createEventHandle (fn) {\n  var handle = {\n    fn: fn,\n    invoker: function () {\n      var arguments$1 = arguments;\n\n      var fn = handle.fn;\n      if (Array.isArray(fn)) {\n        for (var i = 0; i < fn.length; i++) {\n          fn[i].apply(null, arguments$1);\n        }\n      } else {\n        fn.apply(null, arguments);\n      }\n    }\n  };\n  return handle\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.invoker) {\n        cur = on[name] = createEventHandle(cur);\n      }\n      add(event.name, cur.invoker, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fn = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name].invoker, event.capture);\n    }\n  }\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// nomralization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (false) {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // convert text to vnode\n  Vue.prototype._v = createTextVNode;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = createEmptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === 'string') {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props,\n    bindObject\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      props = props || {};\n      if (bindObject) {\n        extend(props, bindObject);\n      }\n      return scopedSlotFn(props) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && \"production\" !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        \"production\" !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var type = data.attrs && data.attrs.type;\n            var hash = asProp || config.mustUseProp(tag, type, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add$1 (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$2 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add$1, remove$2, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    // optimize hook:event cost by using a boolean flag marked at registration\n    // instead of a hash lookup\n    if (hookRE.test(event)) {\n      vm._hasHookEvent = true;\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      if (false) {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function updateComponent () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (false) {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (false) {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      updateComponentListeners(vm, listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            \"production\" !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, props) {\n  var propsData = vm.$options.propsData || {};\n  var keys = vm.$options._propKeys = Object.keys(props);\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( i ) {\n    var key = keys[i];\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) loop( i );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm, computed) {\n  for (var key in computed) {\n    /* istanbul ignore if */\n    if (false) {\n      warn(\n        \"existing instance property \\\"\" + key + \"\\\" will be \" +\n        \"overwritten by a computed property with the same name.\",\n        vm\n      );\n    }\n    var userDef = computed[key];\n    if (typeof userDef === 'function') {\n      computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n      computedSharedDefinition.set = noop;\n    } else {\n      computedSharedDefinition.get = userDef.get\n        ? userDef.cache !== false\n          ? makeComputedGetter(userDef.get, vm)\n          : bind$1(userDef.get, vm)\n        : noop;\n      computedSharedDefinition.set = userDef.set\n        ? bind$1(userDef.set, vm)\n        : noop;\n    }\n    Object.defineProperty(vm, key, computedSharedDefinition);\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm, methods) {\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n    if (false) {\n      warn(\n        \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n        \"Did you reference the function correctly?\",\n        vm\n      );\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$2 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.1.10';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar target$1;\n\nfunction add$2 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      remove$3(event, handler, capture, _target);\n      arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$3 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  updateListeners(on, oldOn, add$2, remove$3, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(vnode, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (vnode, newVal) {\n  var value = vnode.elm.value;\n  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    leaveToClass: (name + \"-leave-to\"),\n    appearToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (false) {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    var key = child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.isUnknownElement = isUnknownElement;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\nif (false) {\n  console[console.info ? 'info' : 'log'](\n    \"You are running Vue in development mode.\\n\" +\n    \"Make sure to turn on production mode when deploying for production.\\n\" +\n    \"See more tips at https://vuejs.org/guide/deployment.html\"\n  );\n}\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (\n      false\n    ) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\nmodule.exports = Vue$2;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// TwitchPlayer.js", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4acd410b1a240828e8f9", "var Component = require(\"!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/selector?type=script&index=0!./TwitchPlayer.vue\"),\n  /* template */\n  require(\"!!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/template-compiler?id=data-v-761d6b46!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/selector?type=template&index=0!./TwitchPlayer.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./TwitchPlayer.vue\n// module id = 0\n// module chunks = 0", "const LoadScript = {\n  install: function (Vue) {\n    Vue.loadScript = function (src) { // eslint-disable-line no-param-reassign\n      return new Promise(function (resolve, reject) {\n        if (document.querySelector('script[src=\"' + src + '\"]')) {\n          resolve();\n\n          return;\n        }\n\n        const el = document.createElement('script');\n\n        el.type = 'text/javascript';\n        el.async = true;\n        el.src = src;\n\n        el.addEventListener('load', resolve);\n        el.addEventListener('error', reject);\n        el.addEventListener('abort', reject);\n\n        document.head.appendChild(el);\n      })\n    };\n  },\n};\n\nexport default LoadScript;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-plugin-load-script/index.js\n// module id = 1\n// module chunks = 0", "<template>\n  <div ref=\"player\"></div>\n</template>\n\n<script>\n  import Vue from 'vue';\n  import LoadScript from 'vue-plugin-load-script';\n\n  Vue.use(LoadScript);\n\n  let player;\n\n  export default {\n    name: 'twitch-player',\n    props: {\n      width: {\n        type: String,\n        default: '400',\n      },\n      height: {\n        type: String,\n        default: '300',\n      },\n      volume: {\n        type: Number,\n        default: 0.5,\n      },\n      quality: {\n        type: String,\n        default: 'medium',\n      },\n      playsInline: { // If true, the embedded player plays inline for mobile iOS apps.\n        type: Boolean,\n        default: false,\n      },\n      channel: String,\n      collection: String,\n      video: String,\n    },\n    beforeCreate() {\n      Vue.loadScript('//player.twitch.tv/js/embed/v1.js')\n        .then(() => {\n          const options = {\n            width: this.width,\n            height: this.height,\n          };\n\n          if (this.playsInline) {\n            options.playsinline = true;\n          }\n\n          if (this.channel) {\n            options.channel = this.channel;\n          } else if (this.collection) {\n            options.collection = this.collection;\n          } else if (this.video) {\n            options.video = this.video;\n          } else {\n            this.$emit('error', 'no source specified');\n          }\n\n          player = new window.Twitch.Player(this.$refs.player, options);\n\n          player.addEventListener('ended', () => (this.$emit('ended')));\n\n          player.addEventListener('pause', () => (this.$emit('pause')));\n\n          player.addEventListener('play', () => (this.$emit('play')));\n\n          player.addEventListener('offline', () => (this.$emit('offline')));\n\n          player.addEventListener('online', () => (this.$emit('online')));\n\n          player.addEventListener('ready', () => {\n            player.setQuality(this.quality);\n            player.setVolume(this.volume);\n\n            this.$emit('ready');\n          });\n        }).catch((e) => (this.$emit('error', e)));\n    },\n    methods: {\n      play() { // Begins playing the specified video.\n        player.play();\n      },\n      pause() { // Pauses the player.\n        player.pause();\n      },\n      seek(timestamp) { // Seeks to the specified timestamp (in seconds) in the video and resumes playing if paused. Does not work for live streams.\n        player.seek(timestamp);\n      },\n      getCurrentTime() { // Returns the current video\u2019s timestamp, in seconds. Works only for VODs, not live streams.\n        return player.getCurrentTime();\n      },\n      getDuration() { // Returns the duration of the video, in seconds. Works only for VODs,not live streams.\n        return player.getDuration();\n      },\n      getPlaybackStats() { // Returns an object with statistics the embedded video player and the current live stream or VOD.\n        return player.getPlaybackStats();\n      },\n      getQuality() { // Returns the current quality of video playback.\n        return player.getQuality();\n      },\n      isPaused() { // Returns true if the video is paused; otherwise, false. Buffering or seeking is considered playing.\n        return player.isPaused();\n      },\n      hasEnded() { // Returns true if the live stream or VOD has ended; otherwise, false.\n        return player.getEnded();\n      },\n      getVolume() { // Returns the volume level, a value between 0.0 and 1.0.\n        return player.getVolume();\n      },\n      isMuted() { // Returns true if the player is muted; otherwise, false.\n        return player.getMuted();\n      },\n      mute() { // Mutes the player.\n        player.setMuted(true);\n      },\n      unmute() { // Unmutes the player.\n        player.setMuted(false);\n      },\n      checkChannel() {\n        return this.channel === player.getChannel();\n      },\n      checkVideo() {\n        return this.video = player.getVideo();\n      },\n    },\n    watch: {\n      channel(newChannel) {\n        player.setChannel(newChannel);\n      },\n      collection(newCollection) {\n        player.setCollection(newCollection);\n      },\n      video(newVideo) {\n        player.setVideo(newVideo);\n      },\n      volume(newVolume) {\n        player.setVolume(newVolume);\n      },\n      quality(newQuality) {\n        if (player.getQualities().indexOf(newQuality) !== -1) {\n          player.setQuality(newQuality);\n        }\n      },\n    },\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// TwitchPlayer.vue?67c79f8a", "module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/lib/~/vue-cli/~/vue-loader/lib/component-normalizer.js\n// module id = 3\n// module chunks = 0", "module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"player\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/lib/~/vue-cli/~/vue-loader/lib/template-compiler.js?id=data-v-761d6b46!/usr/lib/~/vue-cli/~/vue-loader/lib/selector.js?type=template&index=0!./TwitchPlayer.vue\n// module id = 4\n// module chunks = 0", "/*!\n * Vue.js v2.1.10\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tidentity: identity,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n    var child = vnode.componentInstance = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.componentInstance = oldVnode.componentInstance;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.componentInstance._isMounted) {\n    vnode.componentInstance._isMounted = true;\n    callHook(vnode.componentInstance, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.componentInstance._inactive = false;\n    callHook(vnode.componentInstance, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.componentInstance._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.componentInstance.$destroy();\n    } else {\n      vnode.componentInstance._inactive = true;\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once,\n    capture: capture\n  }\n});\n\nfunction createEventHandle (fn) {\n  var handle = {\n    fn: fn,\n    invoker: function () {\n      var arguments$1 = arguments;\n\n      var fn = handle.fn;\n      if (Array.isArray(fn)) {\n        for (var i = 0; i < fn.length; i++) {\n          fn[i].apply(null, arguments$1);\n        }\n      } else {\n        fn.apply(null, arguments);\n      }\n    }\n  };\n  return handle\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.invoker) {\n        cur = on[name] = createEventHandle(cur);\n      }\n      add(event.name, cur.invoker, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fn = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name].invoker, event.capture);\n    }\n  }\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// nomralization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // convert text to vnode\n  Vue.prototype._v = createTextVNode;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = createEmptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === 'string') {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props,\n    bindObject\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      props = props || {};\n      if (bindObject) {\n        extend(props, bindObject);\n      }\n      return scopedSlotFn(props) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && process.env.NODE_ENV !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var type = data.attrs && data.attrs.type;\n            var hash = asProp || config.mustUseProp(tag, type, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add$1 (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$2 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add$1, remove$2, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    // optimize hook:event cost by using a boolean flag marked at registration\n    // instead of a hash lookup\n    if (hookRE.test(event)) {\n      vm._hasHookEvent = true;\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      if (process.env.NODE_ENV !== 'production') {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function updateComponent () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      updateComponentListeners(vm, listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has$1[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            process.env.NODE_ENV !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, props) {\n  var propsData = vm.$options.propsData || {};\n  var keys = vm.$options._propKeys = Object.keys(props);\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( i ) {\n    var key = keys[i];\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) loop( i );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm, computed) {\n  for (var key in computed) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && key in vm) {\n      warn(\n        \"existing instance property \\\"\" + key + \"\\\" will be \" +\n        \"overwritten by a computed property with the same name.\",\n        vm\n      );\n    }\n    var userDef = computed[key];\n    if (typeof userDef === 'function') {\n      computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n      computedSharedDefinition.set = noop;\n    } else {\n      computedSharedDefinition.get = userDef.get\n        ? userDef.cache !== false\n          ? makeComputedGetter(userDef.get, vm)\n          : bind$1(userDef.get, vm)\n        : noop;\n      computedSharedDefinition.set = userDef.set\n        ? bind$1(userDef.set, vm)\n        : noop;\n    }\n    Object.defineProperty(vm, key, computedSharedDefinition);\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm, methods) {\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production' && methods[key] == null) {\n      warn(\n        \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n        \"Did you reference the function correctly?\",\n        vm\n      );\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$2 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$2)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.1.10';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar target$1;\n\nfunction add$2 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      remove$3(event, handler, capture, _target);\n      arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$3 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  updateListeners(on, oldOn, add$2, remove$3, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(vnode, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (vnode, newVal) {\n  var value = vnode.elm.value;\n  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    leaveToClass: (name + \"-leave-to\"),\n    appearToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    var key = child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.isUnknownElement = isUnknownElement;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\nif (process.env.NODE_ENV !== 'production' &&\n    inBrowser && typeof console !== 'undefined') {\n  console[console.info ? 'info' : 'log'](\n    \"You are running Vue in development mode.\\n\" +\n    \"Make sure to turn on production mode when deploying for production.\\n\" +\n    \"See more tips at https://vuejs.org/guide/deployment.html\"\n  );\n}\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (\n      process.env.NODE_ENV !== 'production' &&\n      inBrowser && !isEdge && /Chrome\\/\\d+/.test(window.navigator.userAgent)\n    ) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\nmodule.exports = Vue$2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/lib/~/vue-cli/~/vue/dist/vue.runtime.common.js\n// module id = 5\n// module chunks = 0", "var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 6\n// module chunks = 0", "export default require(\"./node_modules/vue-twitch-player/dist/TwitchPlayer.js\");"],
  "mappings": "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",
  "names": []
}
