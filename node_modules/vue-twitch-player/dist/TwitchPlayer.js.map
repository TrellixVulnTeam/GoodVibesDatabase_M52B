{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///TwitchPlayer.js","webpack:///webpack/bootstrap 4acd410b1a240828e8f9","webpack:///./TwitchPlayer.vue","webpack:///./~/vue-plugin-load-script/index.js","webpack:///TwitchPlayer.vue","webpack:////usr/lib/~/vue-cli/~/vue-loader/lib/component-normalizer.js","webpack:///./TwitchPlayer.vue?e8b3","webpack:////usr/lib/~/vue-cli/~/vue/dist/vue.runtime.common.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Component","__webpack_exports__","LoadScript","install","Vue","loadScript","src","Promise","resolve","reject","document","querySelector","el","createElement","type","async","addEventListener","head","appendChild","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_0_vue___default","__WEBPACK_IMPORTED_MODULE_1_vue_plugin_load_script__","a","use","player","props","width","String","default","height","volume","Number","quality","playsInline","Boolean","channel","collection","video","beforeCreate","_this","then","options","playsinline","$emit","window","Twitch","Player","$refs","setQuality","setVolume","catch","e","methods","play","pause","seek","timestamp","getCurrentTime","getDuration","getPlaybackStats","getQuality","isPaused","hasEnded","getEnded","getVolume","isMuted","getMuted","mute","setMuted","unmute","checkChannel","getChannel","checkVideo","getVideo","watch","newChannel","setChannel","newCollection","setCollection","newVideo","setVideo","newVolume","newQuality","getQualities","indexOf","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","render","staticRenderFns","_scopeId","computed","keys","forEach","key","_vm","_h","$createElement","_c","_self","ref","global","_toString","val","JSON","stringify","toNumber","parseFloat","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","length","toLowerCase","remove$1","arr","item","index","splice","hasOwn","obj","isPrimitive","cached","fn","cache","hit","bind$1","ctx","boundFn","arguments","apply","_length","toArray","start","ret","Array","extend","to","_from","isObject","isPlainObject","toString","OBJECT_STRING","toObject","res","noop","genStaticKeys","reduce","concat","staticKeys","join","looseEqual","b","isObjectA","isObjectB","looseIndexOf","isReserved","charCodeAt","def","writable","parsePath","path","bailRE","test","segments","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","push","popTarget","pop","protoAugment","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isArray","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","getOwnPropertyDescriptor","setter","set","childOb","depend","dependArray","newVal","notify","set$1","Math","max","del","mergeData","from","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","camelize","normalizeDirectives","dirs","directives","bind","update","mergeOptions","parent","child","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","mixin","Vue$2","resolveAsset","id","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","hyphenate","undefined","getPropDefaultValue","prevShouldConvert","$options","Function","getType","match","len","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","children","text","elm","context","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","$forceUpdate","resolveConstructorOptions","extractProps","functional","createFunctionalComponent","listeners","on","nativeOn","abstract","mergeHooks","_context","h","slots","resolveSlots","functionalContext","slot","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentVnode","_parentListeners","_renderChildren","_parentElm","_refElm","inlineTemplate","init","hydrating","componentInstance","_isDestroyed","activeInstance","$mount","keepAlive","mountedNode","prepatch","oldVnode","_updateFromParent","insert","_isMounted","callHook","_inactive","destroy$1","$destroy","cb","requested","cbs","pendingCallbacks","sync","reason","attrs","domProps","altKey","checkProp","hash","preserve","hook","hooksToMerge","fromParent","ours","hooks","mergeHook$1","one","two","mergeVNodeHook","hookKey","injectedHash","__injected","oldHook","createEventHandle","handle","invoker","arguments$1","updateListeners","oldOn","add","remove$$1","cur","old","event","normalizeEvent","once","capture","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","nestedIndex","last","getFirstComponentChild","filter","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","createEmptyVNode","scopedSlots","SIMPLE_NORMALIZE","config","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","initRender","$vnode","_vnode","_staticTrees","parentVnode","renderContext","$slots","$scopedSlots","renderMixin","markStatic","tree","isOnce","markStaticNode","node","$nextTick","nextTick","_render","_renderProxy","errorHandler","_s","_v","_n","_e","_q","_i","_m","isInFor","_o","_f","identity","_l","_t","fallback","bindObject","scopedSlotFn","slotNodes","_b","asProp","mustUseProp","_k","eventKeyCode","builtInAlias","keyCodes","defaultSlot","isComment","initEvents","_events","_hasHookEvent","updateComponentListeners","add$1","$once","$on","remove$2","$off","oldListeners","eventsMixin","hookRE","args","initLifecycle","$parent","$children","$root","_watcher","_isBeingDestroyed","lifecycleMixin","_mount","$el","Watcher","_update","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","renderChildren","hasChildren","propKeys","_propKeys","teardown","_watchers","_data","handlers","j","resetSchedulerState","queue","has$1","waiting","flushing","flushSchedulerQueue","watcher","sort","run","devtools","emit","queueWatcher","traverse","seenObjects","clear","_traverse","seen","isA","depId","has","initState","opts","initProps","initMethods","initData","initComputed","initWatch","isRoot","loop","proxy","userDef","computedSharedDefinition","makeComputedGetter","owner","lazy","dirty","evaluate","handler","createWatcher","$watch","stateMixin","dataDef","$set","$delete","expOrFn","user","immediate","initMixin","_init","_uid","uid","initInternalComponent","constructor","super","superOptions","cachedSuperOptions","extendOptions","components","initUse","plugin","installed","unshift","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","_assetTypes","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","cachedNode","pruneCacheEntry","initGlobalAPI","configDef","util","delete","builtInComponents","genClassForVnode","parentNode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","slice","isSVG","isUnknownElement","inBrowser","unknownElementCache","HTMLUnknownElement","HTMLElement","query","createElement$1","tagName","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","refs","refInFor","isUndef","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","isRootInsert","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","emptyNode","i$1","addVnodes","startIdx","invokeDestroyHook","destroy","removeVnodes","ch","removeAndInvokeRemoveHook","rm","remove","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hasData","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","hooks$1","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","ancestor","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","add$2","oldHandler","target$1","ev","remove$3","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","number","trim","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","setTimeout","styles","getComputedStyle","transitioneDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","cancelled","resolveTransition","_enterCb","css","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","expectsCSS","userWantsControl","show","pendingNode","_pending","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","afterLeave","leaveCancelled","delayLeave","def$$1","autoCssTransition","called","_enter","_","setSelected","binding","isMultiple","multiple","selected","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","_isServer","_Set","isBuiltInTag","camelizeRE","toUpperCase","charAt","hyphenateRE","no","optionMergeStrategies","silent","ignoredElements","_lifecycleHooks","_maxUpdateCount","hasProto","UA","navigator","userAgent","isIE","isEdge","isAndroid","isIOS","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","logError","err","console","error","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","formatComponentName","warn","uid$1","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","result","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","augment","walk","items","instanceData","defaultData","freeze","defineReactive","raw","prototypeAccessors","defineProperties","uid$2","deep","active","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","this$1","tmp","patternTypes","RegExp","KeepAlive","include","exclude","created","destroyed","version","testEl","acceptValue","attr","svg","math","isHTMLTag","baseModules","klass","events","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","patch$1","vmodel","model","needReset","some","v","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","info","platformComponents","g","eval"],"mappings":"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","file":"TwitchPlayer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TwitchPlayer\"] = factory();\n\telse\n\t\troot[\"TwitchPlayer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TwitchPlayer\"] = factory();\n\telse\n\t\troot[\"TwitchPlayer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(4),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nconst LoadScript = {\n  install: function (Vue) {\n    Vue.loadScript = function (src) { // eslint-disable-line no-param-reassign\n      return new Promise(function (resolve, reject) {\n        if (document.querySelector('script[src=\"' + src + '\"]')) {\n          resolve();\n\n          return;\n        }\n\n        const el = document.createElement('script');\n\n        el.type = 'text/javascript';\n        el.async = true;\n        el.src = src;\n\n        el.addEventListener('load', resolve);\n        el.addEventListener('error', reject);\n        el.addEventListener('abort', reject);\n\n        document.head.appendChild(el);\n      })\n    };\n  },\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = LoadScript;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_plugin_load_script__ = __webpack_require__(1);\n//\n//\n//\n//\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue___default.a.use(__WEBPACK_IMPORTED_MODULE_1_vue_plugin_load_script__[\"a\" /* default */]);\n\nvar player = void 0;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'twitch-player',\n  props: {\n    width: {\n      type: String,\n      default: '400'\n    },\n    height: {\n      type: String,\n      default: '300'\n    },\n    volume: {\n      type: Number,\n      default: 0.5\n    },\n    quality: {\n      type: String,\n      default: 'medium'\n    },\n    playsInline: { // If true, the embedded player plays inline for mobile iOS apps.\n      type: Boolean,\n      default: false\n    },\n    channel: String,\n    collection: String,\n    video: String\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_0_vue___default.a.loadScript('//player.twitch.tv/js/embed/v1.js').then(function () {\n      var options = {\n        width: _this.width,\n        height: _this.height\n      };\n\n      if (_this.playsInline) {\n        options.playsinline = true;\n      }\n\n      if (_this.channel) {\n        options.channel = _this.channel;\n      } else if (_this.collection) {\n        options.collection = _this.collection;\n      } else if (_this.video) {\n        options.video = _this.video;\n      } else {\n        _this.$emit('error', 'no source specified');\n      }\n\n      player = new window.Twitch.Player(_this.$refs.player, options);\n\n      player.addEventListener('ended', function () {\n        return _this.$emit('ended');\n      });\n\n      player.addEventListener('pause', function () {\n        return _this.$emit('pause');\n      });\n\n      player.addEventListener('play', function () {\n        return _this.$emit('play');\n      });\n\n      player.addEventListener('offline', function () {\n        return _this.$emit('offline');\n      });\n\n      player.addEventListener('online', function () {\n        return _this.$emit('online');\n      });\n\n      player.addEventListener('ready', function () {\n        player.setQuality(_this.quality);\n        player.setVolume(_this.volume);\n\n        _this.$emit('ready');\n      });\n    }).catch(function (e) {\n      return _this.$emit('error', e);\n    });\n  },\n\n  methods: {\n    play: function play() {\n      // Begins playing the specified video.\n      player.play();\n    },\n    pause: function pause() {\n      // Pauses the player.\n      player.pause();\n    },\n    seek: function seek(timestamp) {\n      // Seeks to the specified timestamp (in seconds) in the video and resumes playing if paused. Does not work for live streams.\n      player.seek(timestamp);\n    },\n    getCurrentTime: function getCurrentTime() {\n      // Returns the current video’s timestamp, in seconds. Works only for VODs, not live streams.\n      return player.getCurrentTime();\n    },\n    getDuration: function getDuration() {\n      // Returns the duration of the video, in seconds. Works only for VODs,not live streams.\n      return player.getDuration();\n    },\n    getPlaybackStats: function getPlaybackStats() {\n      // Returns an object with statistics the embedded video player and the current live stream or VOD.\n      return player.getPlaybackStats();\n    },\n    getQuality: function getQuality() {\n      // Returns the current quality of video playback.\n      return player.getQuality();\n    },\n    isPaused: function isPaused() {\n      // Returns true if the video is paused; otherwise, false. Buffering or seeking is considered playing.\n      return player.isPaused();\n    },\n    hasEnded: function hasEnded() {\n      // Returns true if the live stream or VOD has ended; otherwise, false.\n      return player.getEnded();\n    },\n    getVolume: function getVolume() {\n      // Returns the volume level, a value between 0.0 and 1.0.\n      return player.getVolume();\n    },\n    isMuted: function isMuted() {\n      // Returns true if the player is muted; otherwise, false.\n      return player.getMuted();\n    },\n    mute: function mute() {\n      // Mutes the player.\n      player.setMuted(true);\n    },\n    unmute: function unmute() {\n      // Unmutes the player.\n      player.setMuted(false);\n    },\n    checkChannel: function checkChannel() {\n      return this.channel === player.getChannel();\n    },\n    checkVideo: function checkVideo() {\n      return this.video = player.getVideo();\n    }\n  },\n  watch: {\n    channel: function channel(newChannel) {\n      player.setChannel(newChannel);\n    },\n    collection: function collection(newCollection) {\n      player.setCollection(newCollection);\n    },\n    video: function video(newVideo) {\n      player.setVideo(newVideo);\n    },\n    volume: function volume(newVolume) {\n      player.setVolume(newVolume);\n    },\n    quality: function quality(newQuality) {\n      if (player.getQualities().indexOf(newQuality) !== -1) {\n        player.setQuality(newQuality);\n      }\n    }\n  }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"player\"\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.1.10\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    \"production\" !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tidentity: identity,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n    var child = vnode.componentInstance = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.componentInstance = oldVnode.componentInstance;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.componentInstance._isMounted) {\n    vnode.componentInstance._isMounted = true;\n    callHook(vnode.componentInstance, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.componentInstance._inactive = false;\n    callHook(vnode.componentInstance, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.componentInstance._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.componentInstance.$destroy();\n    } else {\n      vnode.componentInstance._inactive = true;\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once,\n    capture: capture\n  }\n});\n\nfunction createEventHandle (fn) {\n  var handle = {\n    fn: fn,\n    invoker: function () {\n      var arguments$1 = arguments;\n\n      var fn = handle.fn;\n      if (Array.isArray(fn)) {\n        for (var i = 0; i < fn.length; i++) {\n          fn[i].apply(null, arguments$1);\n        }\n      } else {\n        fn.apply(null, arguments);\n      }\n    }\n  };\n  return handle\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.invoker) {\n        cur = on[name] = createEventHandle(cur);\n      }\n      add(event.name, cur.invoker, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fn = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name].invoker, event.capture);\n    }\n  }\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// nomralization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (false) {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // convert text to vnode\n  Vue.prototype._v = createTextVNode;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = createEmptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === 'string') {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props,\n    bindObject\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      props = props || {};\n      if (bindObject) {\n        extend(props, bindObject);\n      }\n      return scopedSlotFn(props) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && \"production\" !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        \"production\" !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var type = data.attrs && data.attrs.type;\n            var hash = asProp || config.mustUseProp(tag, type, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add$1 (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$2 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add$1, remove$2, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    // optimize hook:event cost by using a boolean flag marked at registration\n    // instead of a hash lookup\n    if (hookRE.test(event)) {\n      vm._hasHookEvent = true;\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      if (false) {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function updateComponent () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (false) {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (false) {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      updateComponentListeners(vm, listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            \"production\" !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, props) {\n  var propsData = vm.$options.propsData || {};\n  var keys = vm.$options._propKeys = Object.keys(props);\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( i ) {\n    var key = keys[i];\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) loop( i );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm, computed) {\n  for (var key in computed) {\n    /* istanbul ignore if */\n    if (false) {\n      warn(\n        \"existing instance property \\\"\" + key + \"\\\" will be \" +\n        \"overwritten by a computed property with the same name.\",\n        vm\n      );\n    }\n    var userDef = computed[key];\n    if (typeof userDef === 'function') {\n      computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n      computedSharedDefinition.set = noop;\n    } else {\n      computedSharedDefinition.get = userDef.get\n        ? userDef.cache !== false\n          ? makeComputedGetter(userDef.get, vm)\n          : bind$1(userDef.get, vm)\n        : noop;\n      computedSharedDefinition.set = userDef.set\n        ? bind$1(userDef.set, vm)\n        : noop;\n    }\n    Object.defineProperty(vm, key, computedSharedDefinition);\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm, methods) {\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n    if (false) {\n      warn(\n        \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n        \"Did you reference the function correctly?\",\n        vm\n      );\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$2 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.1.10';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar target$1;\n\nfunction add$2 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      remove$3(event, handler, capture, _target);\n      arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$3 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  updateListeners(on, oldOn, add$2, remove$3, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(vnode, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (vnode, newVal) {\n  var value = vnode.elm.value;\n  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    leaveToClass: (name + \"-leave-to\"),\n    appearToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (false) {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    var key = child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.isUnknownElement = isUnknownElement;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\nif (false) {\n  console[console.info ? 'info' : 'log'](\n    \"You are running Vue in development mode.\\n\" +\n    \"Make sure to turn on production mode when deploying for production.\\n\" +\n    \"See more tips at https://vuejs.org/guide/deployment.html\"\n  );\n}\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (\n      false\n    ) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\nmodule.exports = Vue$2;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// TwitchPlayer.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4acd410b1a240828e8f9","var Component = require(\"!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/selector?type=script&index=0!./TwitchPlayer.vue\"),\n  /* template */\n  require(\"!!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/template-compiler?id=data-v-761d6b46!../../../../../../usr/lib/node_modules/vue-cli/node_modules/vue-loader/lib/selector?type=template&index=0!./TwitchPlayer.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./TwitchPlayer.vue\n// module id = 0\n// module chunks = 0","const LoadScript = {\n  install: function (Vue) {\n    Vue.loadScript = function (src) { // eslint-disable-line no-param-reassign\n      return new Promise(function (resolve, reject) {\n        if (document.querySelector('script[src=\"' + src + '\"]')) {\n          resolve();\n\n          return;\n        }\n\n        const el = document.createElement('script');\n\n        el.type = 'text/javascript';\n        el.async = true;\n        el.src = src;\n\n        el.addEventListener('load', resolve);\n        el.addEventListener('error', reject);\n        el.addEventListener('abort', reject);\n\n        document.head.appendChild(el);\n      })\n    };\n  },\n};\n\nexport default LoadScript;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-plugin-load-script/index.js\n// module id = 1\n// module chunks = 0","<template>\n  <div ref=\"player\"></div>\n</template>\n\n<script>\n  import Vue from 'vue';\n  import LoadScript from 'vue-plugin-load-script';\n\n  Vue.use(LoadScript);\n\n  let player;\n\n  export default {\n    name: 'twitch-player',\n    props: {\n      width: {\n        type: String,\n        default: '400',\n      },\n      height: {\n        type: String,\n        default: '300',\n      },\n      volume: {\n        type: Number,\n        default: 0.5,\n      },\n      quality: {\n        type: String,\n        default: 'medium',\n      },\n      playsInline: { // If true, the embedded player plays inline for mobile iOS apps.\n        type: Boolean,\n        default: false,\n      },\n      channel: String,\n      collection: String,\n      video: String,\n    },\n    beforeCreate() {\n      Vue.loadScript('//player.twitch.tv/js/embed/v1.js')\n        .then(() => {\n          const options = {\n            width: this.width,\n            height: this.height,\n          };\n\n          if (this.playsInline) {\n            options.playsinline = true;\n          }\n\n          if (this.channel) {\n            options.channel = this.channel;\n          } else if (this.collection) {\n            options.collection = this.collection;\n          } else if (this.video) {\n            options.video = this.video;\n          } else {\n            this.$emit('error', 'no source specified');\n          }\n\n          player = new window.Twitch.Player(this.$refs.player, options);\n\n          player.addEventListener('ended', () => (this.$emit('ended')));\n\n          player.addEventListener('pause', () => (this.$emit('pause')));\n\n          player.addEventListener('play', () => (this.$emit('play')));\n\n          player.addEventListener('offline', () => (this.$emit('offline')));\n\n          player.addEventListener('online', () => (this.$emit('online')));\n\n          player.addEventListener('ready', () => {\n            player.setQuality(this.quality);\n            player.setVolume(this.volume);\n\n            this.$emit('ready');\n          });\n        }).catch((e) => (this.$emit('error', e)));\n    },\n    methods: {\n      play() { // Begins playing the specified video.\n        player.play();\n      },\n      pause() { // Pauses the player.\n        player.pause();\n      },\n      seek(timestamp) { // Seeks to the specified timestamp (in seconds) in the video and resumes playing if paused. Does not work for live streams.\n        player.seek(timestamp);\n      },\n      getCurrentTime() { // Returns the current video’s timestamp, in seconds. Works only for VODs, not live streams.\n        return player.getCurrentTime();\n      },\n      getDuration() { // Returns the duration of the video, in seconds. Works only for VODs,not live streams.\n        return player.getDuration();\n      },\n      getPlaybackStats() { // Returns an object with statistics the embedded video player and the current live stream or VOD.\n        return player.getPlaybackStats();\n      },\n      getQuality() { // Returns the current quality of video playback.\n        return player.getQuality();\n      },\n      isPaused() { // Returns true if the video is paused; otherwise, false. Buffering or seeking is considered playing.\n        return player.isPaused();\n      },\n      hasEnded() { // Returns true if the live stream or VOD has ended; otherwise, false.\n        return player.getEnded();\n      },\n      getVolume() { // Returns the volume level, a value between 0.0 and 1.0.\n        return player.getVolume();\n      },\n      isMuted() { // Returns true if the player is muted; otherwise, false.\n        return player.getMuted();\n      },\n      mute() { // Mutes the player.\n        player.setMuted(true);\n      },\n      unmute() { // Unmutes the player.\n        player.setMuted(false);\n      },\n      checkChannel() {\n        return this.channel === player.getChannel();\n      },\n      checkVideo() {\n        return this.video = player.getVideo();\n      },\n    },\n    watch: {\n      channel(newChannel) {\n        player.setChannel(newChannel);\n      },\n      collection(newCollection) {\n        player.setCollection(newCollection);\n      },\n      video(newVideo) {\n        player.setVideo(newVideo);\n      },\n      volume(newVolume) {\n        player.setVolume(newVolume);\n      },\n      quality(newQuality) {\n        if (player.getQualities().indexOf(newQuality) !== -1) {\n          player.setQuality(newQuality);\n        }\n      },\n    },\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// TwitchPlayer.vue?67c79f8a","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/lib/~/vue-cli/~/vue-loader/lib/component-normalizer.js\n// module id = 3\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"player\"\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/lib/~/vue-cli/~/vue-loader/lib/template-compiler.js?id=data-v-761d6b46!/usr/lib/~/vue-cli/~/vue-loader/lib/selector.js?type=template&index=0!./TwitchPlayer.vue\n// module id = 4\n// module chunks = 0","/*!\n * Vue.js v2.1.10\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tidentity: identity,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n    var child = vnode.componentInstance = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.componentInstance = oldVnode.componentInstance;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.componentInstance._isMounted) {\n    vnode.componentInstance._isMounted = true;\n    callHook(vnode.componentInstance, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.componentInstance._inactive = false;\n    callHook(vnode.componentInstance, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.componentInstance._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.componentInstance.$destroy();\n    } else {\n      vnode.componentInstance._inactive = true;\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once,\n    capture: capture\n  }\n});\n\nfunction createEventHandle (fn) {\n  var handle = {\n    fn: fn,\n    invoker: function () {\n      var arguments$1 = arguments;\n\n      var fn = handle.fn;\n      if (Array.isArray(fn)) {\n        for (var i = 0; i < fn.length; i++) {\n          fn[i].apply(null, arguments$1);\n        }\n      } else {\n        fn.apply(null, arguments);\n      }\n    }\n  };\n  return handle\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.invoker) {\n        cur = on[name] = createEventHandle(cur);\n      }\n      add(event.name, cur.invoker, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fn = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name].invoker, event.capture);\n    }\n  }\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// nomralization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // convert text to vnode\n  Vue.prototype._v = createTextVNode;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = createEmptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val) || typeof val === 'string') {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props,\n    bindObject\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      props = props || {};\n      if (bindObject) {\n        extend(props, bindObject);\n      }\n      return scopedSlotFn(props) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && process.env.NODE_ENV !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var type = data.attrs && data.attrs.type;\n            var hash = asProp || config.mustUseProp(tag, type, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add$1 (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$2 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add$1, remove$2, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    // optimize hook:event cost by using a boolean flag marked at registration\n    // instead of a hash lookup\n    if (hookRE.test(event)) {\n      vm._hasHookEvent = true;\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = createEmptyVNode;\n      if (process.env.NODE_ENV !== 'production') {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function updateComponent () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      updateComponentListeners(vm, listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has$1[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            process.env.NODE_ENV !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, props) {\n  var propsData = vm.$options.propsData || {};\n  var keys = vm.$options._propKeys = Object.keys(props);\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( i ) {\n    var key = keys[i];\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n    }\n  };\n\n  for (var i = 0; i < keys.length; i++) loop( i );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm, computed) {\n  for (var key in computed) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && key in vm) {\n      warn(\n        \"existing instance property \\\"\" + key + \"\\\" will be \" +\n        \"overwritten by a computed property with the same name.\",\n        vm\n      );\n    }\n    var userDef = computed[key];\n    if (typeof userDef === 'function') {\n      computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n      computedSharedDefinition.set = noop;\n    } else {\n      computedSharedDefinition.get = userDef.get\n        ? userDef.cache !== false\n          ? makeComputedGetter(userDef.get, vm)\n          : bind$1(userDef.get, vm)\n        : noop;\n      computedSharedDefinition.set = userDef.set\n        ? bind$1(userDef.set, vm)\n        : noop;\n    }\n    Object.defineProperty(vm, key, computedSharedDefinition);\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm, methods) {\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production' && methods[key] == null) {\n      warn(\n        \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n        \"Did you reference the function correctly?\",\n        vm\n      );\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$2 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$2)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.1.10';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar target$1;\n\nfunction add$2 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      remove$3(event, handler, capture, _target);\n      arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$3 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  updateListeners(on, oldOn, add$2, remove$3, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(vnode, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (vnode, newVal) {\n  var value = vnode.elm.value;\n  var modifiers = vnode.elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || vnode.elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    leaveToClass: (name + \"-leave-to\"),\n    appearToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    var key = child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.isUnknownElement = isUnknownElement;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\nif (process.env.NODE_ENV !== 'production' &&\n    inBrowser && typeof console !== 'undefined') {\n  console[console.info ? 'info' : 'log'](\n    \"You are running Vue in development mode.\\n\" +\n    \"Make sure to turn on production mode when deploying for production.\\n\" +\n    \"See more tips at https://vuejs.org/guide/deployment.html\"\n  );\n}\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (\n      process.env.NODE_ENV !== 'production' &&\n      inBrowser && !isEdge && /Chrome\\/\\d+/.test(window.navigator.userAgent)\n    ) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\nmodule.exports = Vue$2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /usr/lib/~/vue-cli/~/vue/dist/vue.runtime.common.js\n// module id = 5\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}